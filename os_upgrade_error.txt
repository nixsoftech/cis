 salt '10.13.0.81' state.apply os_upgrade2_test -l info
10.13.0.81:
----------
          ID: install_update_manager
    Function: pkg.installed
        Name: update-manager-core
      Result: True
     Comment: All specified packages are already installed
     Started: 17:18:40.888859
    Duration: 204.471 ms
     Changes:
----------
          ID: configure_release_upgrades
    Function: file.managed
        Name: /etc/update-manager/release-upgrades
      Result: True
     Comment: File /etc/update-manager/release-upgrades is in the correct state
     Started: 17:18:41.097190
    Duration: 1.887 ms
     Changes:
----------
          ID: configure_repo_initial_main
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu bionic main
      Result: True
     Comment: Configured package repo 'deb [arch=amd64] http://10.13.0.88:8080/ubuntu bionic main'
     Started: 17:18:41.099787
    Duration: 2048.734 ms
     Changes:
----------
          ID: configure_repo_initial_security
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu bionic-security main
      Result: True
     Comment: Configured package repo 'deb [arch=amd64] http://10.13.0.88:8080/ubuntu bionic-security main'
     Started: 17:18:43.148640
    Duration: 985.36 ms
     Changes:
----------
          ID: configure_repo_initial_updates
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu bionic-updates main
      Result: True
     Comment: Configured package repo 'deb [arch=amd64] http://10.13.0.88:8080/ubuntu bionic-updates main'
     Started: 17:18:44.134091
    Duration: 1038.399 ms
     Changes:
----------
          ID: update_package_cache_initial
    Function: pkg.uptodate
      Result: True
     Comment: System is already up-to-date
     Started: 17:18:45.173001
    Duration: 78.201 ms
     Changes:
----------
          ID: backup_installed_packages_list
    Function: cmd.run
        Name: dpkg -l > /var/log/installed_packages_pre_upgrade.txt
      Result: True
     Comment: /var/log/installed_packages_pre_upgrade.txt exists
     Started: 17:18:45.251478
    Duration: 0.362 ms
     Changes:
----------
          ID: upgrade_to_2004
    Function: cmd.run
        Name: DEBIAN_FRONTEND=noninteractive do-release-upgrade -f DistUpgradeViewNonInteractive
      Result: False
     Comment: Command "DEBIAN_FRONTEND=noninteractive do-release-upgrade -f DistUpgradeViewNonInteractive" run
     Started: 17:18:45.252133
    Duration: 45060.95 ms
     Changes:
              ----------
              pid:
                  4766
              retcode:
                  1
              stderr:
              stdout:
----------
          ID: reboot_after_2004
    Function: cmd.run
        Name: reboot
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.upgrade_to_2004
     Changes:
----------
          ID: wait_for_reboot_2004
    Function: cmd.run
        Name: for i in {1..60}; do
  if ping -c 1 10.13.0.81 >/dev/null; then
    sleep 10
    salt '10.13.0.81' test.ping && break
  fi
  sleep 30
done

      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.reboot_after_2004
     Changes:
----------
          ID: configure_repo_focal_main
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu focal main
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.wait_for_reboot_2004
     Changes:
----------
          ID: configure_repo_focal_security
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu focal-security main
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.wait_for_reboot_2004
     Changes:
----------
          ID: configure_repo_focal_updates
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu focal-updates main
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.wait_for_reboot_2004
     Changes:
----------
          ID: update_package_cache_focal
    Function: pkg.uptodate
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.configure_repo_focal_security, os_upgrade2_test.configure_repo_focal_main, os_upgrade2_test.configure_repo_focal_updates
     Changes:
----------
          ID: upgrade_to_2204
    Function: cmd.run
        Name: DEBIAN_FRONTEND=noninteractive do-release-upgrade -f DistUpgradeViewNonInteractive
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.update_package_cache_focal
     Changes:
----------
          ID: reboot_after_2204
    Function: cmd.run
        Name: reboot
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.upgrade_to_2204
     Changes:
----------
          ID: wait_for_reboot_2204
    Function: cmd.run
        Name: for i in {1..60}; do
  if ping -c 1 10.13.0.81 >/dev/null; then
    sleep 10
    salt '10.13.0.81' test.ping && break
  fi
  sleep 30
done

      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.reboot_after_2204
     Changes:
----------
          ID: configure_repo_jammy_main
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu jammy main
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.wait_for_reboot_2204
     Changes:
----------
          ID: configure_repo_jammy_security
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu jammy-security main
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.wait_for_reboot_2204
     Changes:
----------
          ID: configure_repo_jammy_updates
    Function: pkgrepo.managed
        Name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu jammy-updates main
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.wait_for_reboot_2204
     Changes:
----------
          ID: update_package_cache_jammy
    Function: pkg.uptodate
      Result: False
     Comment: One or more requisite failed: os_upgrade2_test.configure_repo_jammy_security, os_upgrade2_test.configure_repo_jammy_main, os_upgrade2_test.configure_repo_jammy_updates
     Changes:
----------
          ID: log_upgrade_failure
    Function: cmd.run
        Name: echo "Upgrade failed at $(date)" >> /var/log/upgrade.log
      Result: True
     Comment: Command "echo "Upgrade failed at $(date)" >> /var/log/upgrade.log" run
     Started: 17:19:30.315254
    Duration: 6.526 ms
     Changes:
              ----------
              pid:
                  5928
              retcode:
                  0
              stderr:
              stdout:

Summary for 10.13.0.81
-------------
Succeeded:  8 (changed=2)
Failed:    14
-------------
Total states run:     22
Total run time:   49.425 s
ERROR: Minions returned with non-zero exit code
==================================================
cat os_upgrade2_test.sls
# Install update-manager-core
install_update_manager:
  pkg.installed:
    - name: update-manager-core

# Configure release-upgrades for LTS upgrades
configure_release_upgrades:
  file.managed:
    - name: /etc/update-manager/release-upgrades
    - contents: |
        [DEFAULT]
        Prompt=lts
    - require:
      - pkg: install_update_manager

# Step 1: Configure repository for current codename and upgrade to 20.04
{% set codename = grains['lsb_distrib_codename'] %}
configure_repo_initial_main:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu {{ codename }} main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: True
    - onlyif: lsb_release -cs | grep -q bionic

configure_repo_initial_security:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Security Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu {{ codename }}-security main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: False
    - onlyif: lsb_release -cs | grep -q bionic

configure_repo_initial_updates:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Updates Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu {{ codename }}-updates main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: False
    - onlyif: lsb_release -cs | grep -q bionic

update_package_cache_initial:
  pkg.uptodate:
    - require:
      - pkgrepo: configure_repo_initial_main
      - pkgrepo: configure_repo_initial_security
      - pkgrepo: configure_repo_initial_updates

backup_installed_packages_list:
  cmd.run:
    - name: dpkg -l > /var/log/installed_packages_pre_upgrade.txt
    - creates: /var/log/installed_packages_pre_upgrade.txt
    - require:
      - pkg: update_package_cache_initial

upgrade_to_2004:
  cmd.run:
    - name: DEBIAN_FRONTEND=noninteractive do-release-upgrade -f DistUpgradeViewNonInteractive
    - unless: lsb_release -cs | grep -q focal
    - require:
      - file: configure_release_upgrades
      - cmd: backup_installed_packages_list

reboot_after_2004:
  cmd.run:
    - name: reboot
    - require:
      - cmd: upgrade_to_2004
    - onlyif: test -f /var/run/reboot-required

wait_for_reboot_2004:
  cmd.run:
    - name: |
        for i in {1..60}; do
          if ping -c 1 10.13.0.81 >/dev/null; then
            sleep 10
            salt '{{ grains['id'] }}' test.ping && break
          fi
          sleep 30
        done
    - require:
      - cmd: reboot_after_2004
    - onlyif: lsb_release -cs | grep -q focal

# Step 2: Configure repository for 20.04 and upgrade to 22.04
configure_repo_focal_main:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu focal main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: True
    - require:
      - cmd: wait_for_reboot_2004
    - onlyif: lsb_release -cs | grep -q focal

configure_repo_focal_security:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Security Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu focal-security main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: False
    - require:
      - cmd: wait_for_reboot_2004
    - onlyif: lsb_release -cs | grep -q focal

configure_repo_focal_updates:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Updates Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu focal-updates main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: False
    - require:
      - cmd: wait_for_reboot_2004
    - onlyif: lsb_release -cs | grep -q focal

update_package_cache_focal:
  pkg.uptodate:
    - require:
      - pkgrepo: configure_repo_focal_main
      - pkgrepo: configure_repo_focal_security
      - pkgrepo: configure_repo_focal_updates

upgrade_to_2204:
  cmd.run:
    - name: DEBIAN_FRONTEND=noninteractive do-release-upgrade -f DistUpgradeViewNonInteractive
    - unless: lsb_release -cs | grep -q jammy
    - require:
      - pkg: update_package_cache_focal

reboot_after_2204:
  cmd.run:
    - name: reboot
    - require:
      - cmd: upgrade_to_2204
    - onlyif: test -f /var/run/reboot-required

wait_for_reboot_2204:
  cmd.run:
    - name: |
        for i in {1..60}; do
          if ping -c 1 10.13.0.81 >/dev/null; then
            sleep 10
            salt '{{ grains['id'] }}' test.ping && break
          fi
          sleep 30
        done
    - require:
      - cmd: reboot_after_2204
    - onlyif: lsb_release -cs | grep -q jammy

# Step 3: Configure repository for 22.04
configure_repo_jammy_main:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu jammy main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: True
    - require:
      - cmd: wait_for_reboot_2204
    - onlyif: lsb_release -cs | grep -q jammy

configure_repo_jammy_security:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Security Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu jammy-security main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: False
    - require:
      - cmd: wait_for_reboot_2204
    - onlyif: lsb_release -cs | grep -q jammy

configure_repo_jammy_updates:
  pkgrepo.managed:
    - humanname: Custom Ubuntu Updates Repository
    - name: deb [arch=amd64] http://10.13.0.88:8080/ubuntu jammy-updates main
    - file: /etc/apt/sources.list.d/custom-ubuntu.list
    - refresh: True
    - clean_file: False
    - require:
      - cmd: wait_for_reboot_2204
    - onlyif: lsb_release -cs | grep -q jammy

update_package_cache_jammy:
  pkg.uptodate:
    - require:
      - pkgrepo: configure_repo_jammy_main
      - pkgrepo: configure_repo_jammy_security
      - pkgrepo: configure_repo_jammy_updates

# Log upgrade failures
log_upgrade_failure:
  cmd.run:
    - name: echo "Upgrade failed at $(date)" >> /var/log/upgrade.log
    - onfail:
      - cmd: upgrade_to_2004
      - cmd: upgrade_to_2204
